{"version":3,"sources":["Components/UI/Input/Input.module.css","Components/UI/Button/Button.module.css","assets/images/shopping-cart.svg","assets/images/empty.png","assets/images/done.png","assets/images/warning.png","Components/Cart/CartCount/CartCount.js","Components/UI/HamburgerMenu/HamburgerMenu.js","axios-products.js","store/actions/addToCart.js","store/actions/actionTypes.js","store/actions/cart.js","store/actions/auth.js","Components/Navigation/Navbar/Navbar.js","hoc/Layout/Layout.js","Components/UI/Spinner/Spinner.js","Components/UI/Button/Button.js","Components/Cart/CartProductList/CartProductList.js","Components/Cart/Cart.js","Components/UI/Input/Input.js","Containers/Checkout/Checkout.js","store/actions/checkout.js","Components/Product/ProductMadeOf/ProductMadeOf.js","Components/Product/Product.js","Components/UI/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/FullProductInfo/FullProductInfo.js","Components/ProductList/ProductList.js","store/actions/productList.js","Containers/Auth/Auth.js","Containers/Auth/Logout/Logout.js","Containers/Account/Account.js","App.js","serviceWorker.js","store/reducers/productList.js","store/reducers/cart.js","store/reducers/auth.js","index.js"],"names":["module","exports","Label","InputElement","Invalid","ValidationError","Button","editCartBtn","ShoeNotAvailableSize","ShoeAvailableSizeBtn","ShoeAvailableSizeBtnActive","Danger","madeOf","__webpack_require__","p","CartCount","props","react_default","a","createElement","className","count","hamburgerMenu","onClick","clicked","instance","axios","create","baseURL","cartCounter","localCartObject","dispatch","type","cartItemsCounter","updateCartCouner","Object","keys","length","fetchLocalStoreCart","localCartProducts","JSON","parse","localStorage","getItem","allCartPrices","values","fullCartPrice","i","price","productsInCart","localCart","addToCartSuccess","cart","addToCartFail","authSuccess","token","userId","idToken","logout","removeItem","checkAuthTimeout","expirationTime","setTimeout","Navbar","state","menuIsClicked","menuClickedHandler","_this","setState","prevState","console","log","closeMenuHandler","this","initCartCouter","linkStyling","rightLinkWrapper","cartCountNum","menuIsOpen","Cart_CartCount_CartCount","react_router_dom","to","activeClassName","exact","HamburgerMenu_HamburgerMenu","isAuthenticated","react","src","shoppingCartImg","alt","Component","connect","auth","navbarListActions","Layout","Fragment","Navigation_Navbar_Navbar","children","Spinner","button","value","disabled","classes","btnType","join","CartProductList","image","brand","model","quantity","size","noBtn","id","Cart","fullPrice","ProductCount","handleDelete","event","preventDefault","onDeleteFromCart","componentDidMount","cartCountHandler","cartProductsNum","goToCheckout","history","replace","onInitCart","_this2","printCartProducts","checkoutBtn","loading","UI_Spinner_Spinner","entries","map","shoes","Cart_CartProductList_CartProductList","key","emptyCartImg","cartListActions","prevLocalCart","cartProductId","currentTarget","splice","cartCounterDel","cartDecreaseCounter","deleteFromCartStore","setItem","stringify","input","inputElement","inputStyles","styles","invalid","shouldValidate","touched","push","validationError","errorMessage","elementConfig","placeholder","elementType","assign","onChange","changed","options","option","displayValue","label","Checkout","Order","CustomerData","name","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","error","checkoutPrice","formIsValid","orderHandler","customerData","userToken","formElementIdentifier","OrderDate","Date","toLocaleString","order","OrderDetails","Price","post","then","response","cartDeleteHandler","onUpdateCart","catch","fullPriceCheckout","inputChangeHandler","inputIdentifier","updatedCustomerData","objectSpread","updatedFormElement","target","checkValidity","handleCartEdit","onInitCheckout","rules","isValid","trim","orderPrice","form","formElementArray","printCheckoutProducts","config","onSubmit","formElement","Input","product","checkoutListActions","ProductMadeOf","class","upper","lining","outerSole","Product","productSize","sizKey","index","Product_ProductMadeOf_ProductMadeOf","backdrop","Modal","modalClass","Backdrop_Backdrop","modalClosed","FullProductInfo","addedToCart","sizeNotSelected","continueToCart","madeOfClicked","addToCartHandler","selectedShoeId","selectedShoePrice","selectedShoeImg","newState","cartProduct","onAddToCart","alertHandler","selectSizeHandler","continueHandler","goToCartHandler","showMadeOf","window","scrollTo","alertSizeSelect","askIfContinue","UI_Modal_Modal","warningImg","productAddedImg","checkIfClicked","addToCartBtn","exit","description","withRouter","actions","ProductList","selectedProductId","selectedProductData","visible","productSelectedHandler","productSelectCancelHandler","loadMore","prev","onInitProducts","loadMoreBtn","fullProductInf","productList","loadingSpinner","prod","slice","Components_Product_Product","Components_FullProductInfo_FullProductInfo","Products","get","products","data","Auth","controls","isEmail","password","isSignup","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthModeHandler","message","authRedirect","onRedirectBackToCart","react_router","authData","returnSecureToken","url","expirationDate","getTime","expiresIn","localId","err","Logout","onLogout","Account","accountData","showProducts","ProductId","openProductList","queryParams","_this3","spinner","showOrders","App","onTryAutoSignup","routes","path","component","hoc_Layout_Layout","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","reducer","arguments","undefined","action","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","cartReducer","productListReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7691e44f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Input_Label__36Slj\",\"InputElement\":\"Input_InputElement__2l4YK\",\"Invalid\":\"Input_Invalid__3OdMQ\",\"ValidationError\":\"Input_ValidationError__1TfDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__vkXPd\",\"editCartBtn\":\"Button_editCartBtn__2EAOH\",\"ShoeNotAvailableSize\":\"Button_ShoeNotAvailableSize__169MO\",\"ShoeAvailableSizeBtn\":\"Button_ShoeAvailableSizeBtn__3oj-D\",\"ShoeAvailableSizeBtnActive\":\"Button_ShoeAvailableSizeBtnActive__wlJB3\",\"Danger\":\"Button_Danger__1JLBb\",\"madeOf\":\"Button_madeOf__39CDD\"};","module.exports = __webpack_public_path__ + \"static/media/shopping-cart.14520b56.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.1bc44745.png\";","module.exports = __webpack_public_path__ + \"static/media/done.46ea2fc3.png\";","module.exports = __webpack_public_path__ + \"static/media/warning.2861e7cc.png\";","import React from 'react';\r\nimport '../CartCount/CartCount.css'\r\n\r\nconst CartCount = (props) => {\r\n\r\n    return (\r\n        <button className='CartCountNum'>{props.count}</button>\r\n    );\r\n}\r\n\r\nexport default CartCount;","import React from 'react';\r\n\r\nimport './HamburgerMenu.css';\r\n\r\nconst hamburgerMenu = (props) => (\r\n    <div className={'Hamburger '+ props.className} onClick={props.clicked}>\r\n    <span></span>\r\n    <span></span>\r\n    <span></span>\r\n    </div>\r\n);\r\n\r\nexport default hamburgerMenu;","import axios from 'axios'; \r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://shoemaster-605bc.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\n\r\nexport const updateCartCouner = (cartCounter) => {\r\n    return { \r\n        type: actionTypes.CART_COUNTER,\r\n        cartItemsCounter: cartCounter\r\n    };\r\n}\r\n\r\nexport const addToCartLocalStorage = (cartProduct) => {\r\n    // localStorage.clear();\r\n    return dispatch => {\r\n        let localCart = localStorage.getItem('addToCart');\r\n        if (localCart!= null) {\r\n            let localCartObject = JSON.parse(localCart);\r\n            localCartObject.push(cartProduct);\r\n              //update Cart counter \r\n            dispatch(cartCounter(localCartObject))\r\n            // add Product to local storage\r\n            localStorage.setItem('addToCart', JSON.stringify(localCartObject));\r\n        }else {\r\n            let productsInCart = [];\r\n            productsInCart.push(cartProduct);\r\n             //update Cart counter when localStorege is empty (first add)\r\n            let localCartObject = 1;\r\n            dispatch(cartCounter(localCartObject));\r\n            localStorage.setItem('addToCart', JSON.stringify(productsInCart));\r\n        }\r\n    }\r\n}\r\n\r\nexport const cartCounter = (localCartObject) => {\r\n    return dispatch => {\r\n        let cartCounter = (Object.keys(localCartObject).length);\r\n            dispatch (updateCartCouner(cartCounter))\r\n    }\r\n}\r\n\r\n","export const FETCH_START = 'FETCH_START';\r\nexport const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const FETCH_PRODUCTS_FAIL = 'FETCH_PRODUCTS_FAIL';\r\n\r\n\r\nexport const DELETE_FROM_CART = 'DELETE_FROM_CART';\r\n\r\nexport const CART_COUNTER = 'CART_COUNTER';\r\n\r\n// export const ADD_TO_CART_SUCCESS = 'ADD_TO_CART_SUCCESS';\r\n// export const ADD_TO_CART_FAIL = 'ADD_TO_CART_FAIL';\r\n\r\nexport const FETCH_CART_FROM_LOCAL_STORE = 'FETCH_CART_FROM_LOCAL_STORE';\r\nexport const FETCH_CART_FROM_LOCAL_FAIL = 'FETCH_CART_FROM_LOCAL_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import * as actionTypes from './actionTypes';\r\n\r\nexport const addToCartSuccess = (localCartProducts, fullCartPrice, productsInCart) => {\r\n    return {\r\n        type: actionTypes.FETCH_CART_FROM_LOCAL_STORE,\r\n        localCart: localCartProducts,\r\n        fullCartPrice: fullCartPrice,\r\n        cartItemsCounter: productsInCart\r\n    };\r\n}\r\n\r\nexport const addToCartFail = (localCartProducts) => {\r\n    return { \r\n        type: actionTypes.FETCH_CART_FROM_LOCAL_FAIL,\r\n        cart: localCartProducts\r\n    };\r\n}\r\n\r\n\r\nexport const deleteFromCartStore = (cartCounterDel) => {\r\n    return { \r\n        type: actionTypes.DELETE_FROM_CART,\r\n        cartDecreaseCounter: cartCounterDel\r\n    };\r\n}\r\n\r\n\r\nexport const fetchLocalStoreCart = () => {\r\n    return dispatch => {\r\n        let localCartProducts = JSON.parse(localStorage.getItem('addToCart'))\r\n\r\n        if (localCartProducts) {\r\n            //calculating Cart Full Price\r\n        let allCartPrices = Object.values(localCartProducts);\r\n        let fullCartPrice = 0;\r\n        for (let i = 0; i < allCartPrices.length; i++) {\r\n            fullCartPrice += allCartPrices[i].price;\r\n        }\r\n        let productsInCart = allCartPrices.length;\r\n        dispatch( addToCartSuccess(localCartProducts, fullCartPrice, productsInCart ));\r\n        } else  {\r\n            localCartProducts = null;\r\n            dispatch (addToCartFail(localCartProducts));\r\n        }\r\n        \r\n    };\r\n}\r\n\r\n\r\n\r\nexport const deleteFromCart = (event) => {\r\n    return dispatch => {\r\n        let prevLocalCart = JSON.parse(localStorage.getItem('addToCart'));\r\n        let cartProductId = event.currentTarget.value;\r\n        prevLocalCart.splice(cartProductId ,1);\r\n        // Cart Counter decrease \r\n        let cartCounterDel = (Object.keys(prevLocalCart).length);\r\n        dispatch (deleteFromCartStore (cartCounterDel));\r\n        localStorage.setItem('addToCart', JSON.stringify(prevLocalCart));\r\n        // dispatch(deleteFromCartStore(event));\r\n    };\r\n}\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport  const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return  {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return  dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyC3MCisugq3bT-Gtl3ke1ittYWUJsEQZyI';\r\n        if(!isSignup){\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyC3MCisugq3bT-Gtl3ke1ittYWUJsEQZyI';\r\n        }\r\n        axios.post(url, authData)\r\n        .then(response => {\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            dispatch(logout())\r\n        }else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date ()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n    };\r\n};","import React, { Fragment, Component } from 'react';\r\nimport  './Navbar.modules.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CartCount from '../../Cart/CartCount/CartCount';\r\nimport { connect } from 'react-redux';\r\nimport shoppingCartImg from '../../../assets/images/shopping-cart.svg';\r\nimport HamburgerMenu from '../../UI/HamburgerMenu/HamburgerMenu';\r\nimport * as navbarListActions from '../../../store/actions/index';\r\n\r\nclass  Navbar extends Component {\r\n\r\n    state= {\r\n        menuIsClicked: false\r\n    }\r\n\r\n    menuClickedHandler = () => {\r\n        this.setState(prevState => ({\r\n            menuIsClicked: !prevState.menuIsClicked}));\r\n            console.log(this.state.menuIsClicked);\r\n    }\r\n\r\n    closeMenuHandler = () => {\r\n        this.setState({menuIsClicked: false});\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.initCartCouter();\r\n    }\r\n\r\n\r\n    render () { \r\n        let linkStyling = 'NavLink';\r\n        let rightLinkWrapper = 'RightNavLink';\r\n        let cartCountNum = '';\r\n        let menuIsOpen = '';\r\n\r\n        if (this.state.menuIsClicked) {\r\n            linkStyling = 'NavLinkMobile';\r\n            rightLinkWrapper = 'mobileLinksWrapper';\r\n            menuIsOpen = 'open';\r\n        }\r\n        if (this.props.cartCounter) {\r\n            cartCountNum = <CartCount count = {this.props.cartCounter} />\r\n        } \r\n\r\n        return (\r\n            <nav className='NavBarDiv'>\r\n                <ul className='LeftNavLink'>\r\n                <NavLink onClick={this.closeMenuHandler} to=\"/\" activeClassName=\"rootActive\" exact className=\"Logo\">Shoemaster</NavLink>\r\n                </ul>\r\n                <ul className={rightLinkWrapper}>\r\n                <div className='HamMenu'><HamburgerMenu className={menuIsOpen} clicked={this.menuClickedHandler}/></div>\r\n                {this.props.isAuthenticated? \r\n                <Fragment>\r\n                    <NavLink onClick={this.closeMenuHandler} activeClassName='activeLink' to=\"/Account\" className={linkStyling}>Account</NavLink>\r\n                    <NavLink onClick={this.closeMenuHandler} activeClassName='activeLink' to=\"/Logout\" className={linkStyling}>Logout</NavLink>\r\n                </Fragment>\r\n                :<NavLink onClick={this.closeMenuHandler} activeClassName='activeLink' to=\"/Login\" className={linkStyling}>Login</NavLink>\r\n                }\r\n                <NavLink onClick={this.closeMenuHandler} activeClassName='activeLink' to=\"/Cart\" className={linkStyling}>\r\n                <img className=\"shoppingCart\" src={shoppingCartImg} alt=\"shopping cart\"/>\r\n                {cartCountNum}</NavLink>\r\n                </ul>\r\n                \r\n            </nav>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cartCounter: state.cart.cartItemsCounter,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        initCartCouter: () => dispatch(navbarListActions.fetchLocalStoreCart()),\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Navbar);","import React, { Component } from 'react';\r\nimport Navbar from '../../Components/Navigation/Navbar/Navbar';\r\nimport './Layout.css';\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    render () {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <div className='Layout'>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Layout;","import React from 'react'; \r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"Loader\">Loading...</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        value = {props.value}\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport  './CartProductList.modules.css';\r\nimport Button from '../../UI/Button/Button';\r\n\r\n\r\nconst CartProductList = (props) => {\r\n    \r\n    return (\r\n        <div className='ProductInCart'   onClick={props.clicked}> \r\n        <div className='cartProductWrapper' ><img className='SmallProductImage' src={props.image} alt={props.alt}></img></div>\r\n            <div className='CartProductInfo'><h4>{props.brand}</h4><p>{props.model}</p></div>\r\n            <div className='CartProductInfo'><h4>No.</h4><p>{props.quantity}</p></div>\r\n            <div className='CartProductInfo'><h4>Size</h4><p>{props.size}</p> </div>\r\n            <div className='CartProductInfo'><h4>Price</h4><p>{props.price}$</p> </div>\r\n            <div className={'cartProductDelete ' + props.noBtn}><Button value={props.id} clicked={props.onClick}>Delete</Button></div>\r\n        </div> \r\n    );\r\n    \r\n}\r\n\r\nexport default CartProductList;","import React, { Component } from 'react';\r\nimport './Cart.css';\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport emptyCartImg from '../../assets/images/empty.png';\r\nimport Button from '../UI/Button/Button';\r\nimport CartProductList from './CartProductList/CartProductList';\r\nimport { connect } from 'react-redux';\r\nimport * as cartListActions from '../../store/actions/index';\r\n\r\nclass Cart extends Component {\r\n\r\nstate= {\r\n    fullPrice: null,\r\n    ProductCount: null\r\n}\r\n\r\nhandleDelete = (event) => {\r\n    event.preventDefault();\r\n    this.props.onDeleteFromCart(event);\r\n    this.componentDidMount();\r\n    }\r\n\r\ncartCountHandler = () => {\r\n    let cartProductsNum = (Object.keys(this.state.Cart).length);\r\n    this.setState({ProductCount: cartProductsNum});\r\n}   \r\n\r\ngoToCheckout = (event) => {\r\n    event.preventDefault();\r\n    if(this.props.isAuthenticated) {\r\n        this.props.history.replace('/Checkout');  \r\n    } else {\r\n        this.props.history.replace('/Login');  \r\n    }\r\n}\r\n\r\ncomponentDidMount () {\r\n    this.props.onInitCart();\r\n} \r\n\r\n    render() {\r\n        let cartCountNum = null;\r\n        let printCartProducts = null;\r\n        let  fullCartPrice =null;\r\n        let checkoutBtn = null;\r\n\r\n        if(this.props.loading) {\r\n            return <Spinner/>\r\n        }   if (this.props.fullPrice !== 0 && this.props.Cart ) {\r\n            fullCartPrice = <h3>Total Price: {this.props.fullPrice} $</h3>\r\n            printCartProducts = (Object.entries(this.props.Cart).map((shoes) => {\r\n                return (\r\n                    <CartProductList \r\n                        key={shoes[0]}\r\n                        id={shoes[0]}\r\n                        image={shoes[1].image}\r\n                        alt={shoes[1].brand + ' ' + shoes[1].model}\r\n                        brand={shoes[1].brand}\r\n                        model={shoes[1].model}\r\n                        quantity={shoes[1].quantity}\r\n                        size={shoes[1].size}\r\n                        price={shoes[1].price}\r\n                        onClick={this.handleDelete}\r\n                    />          \r\n                );\r\n            }));\r\n            checkoutBtn = <Button clicked={ this.goToCheckout}>{this.props.isAuthenticated? 'Checkout' : 'Signup to Order'} </Button>\r\n        } else  {\r\n            printCartProducts= (\r\n                <div>\r\n                <h3> is Empty</h3>\r\n                <img className=\"ImageEmptyCart\" src={emptyCartImg} alt=\"empty cart\"></img>\r\n                </div>\r\n            )\r\n        } \r\n        return (\r\n            <div className='CartBox'>\r\n            <h1>Your Cart</h1>\r\n            <div className='CartWrapper'>\r\n                <div >\r\n                {printCartProducts}\r\n                </div>                \r\n            </div>\r\n                {fullCartPrice}\r\n                {checkoutBtn}\r\n                {cartCountNum}\r\n        </div>\r\n        );\r\n    }  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Cart: state.cart.cart,\r\n        loading: state.cart.loading,\r\n        fullPrice: state.cart.fullCartPrice,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitCart: () => dispatch(cartListActions.fetchLocalStoreCart()),\r\n        onDeleteFromCart: (event) => dispatch(cartListActions.deleteFromCart(event))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Cart);","import React from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputStyles = [styles.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputStyles.push(styles.Invalid);\r\n    }\r\n\r\n    let validationError = null;\r\n    let errorMessage = props.value;\r\n    if (props.invalid && props.touched) {\r\n        if (props.elementConfig.type === 'password') { //Prevent showing user input on error message when typing password\r\n            errorMessage = null;\r\n        }\r\n    validationError = <p className={styles.ValidationError}>\r\n    {props.elementConfig.placeholder} {errorMessage} is not valid, try again!</p>;\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input className={inputStyles.join(' ')}\r\n            onChange={props.changed} \r\n            {...props.elementConfig}\r\n            value={props.value}  />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea  className={inputStyles} \r\n            onChange={props.changed}\r\n            {...props.elementConfig}\r\n            value={props.value} />;\r\n            break;\r\n        case ('dropdown'):\r\n            inputElement = <input className={inputStyles}\r\n            onChange={props.changed} \r\n            {...props.elementConfig}\r\n            value={props.value} />;\r\n            break;\r\n        case ('email'):\r\n            inputElement = <input className={inputStyles} \r\n            onChange={props.changed}\r\n            {...props.elementConfig}\r\n            value={props.value} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (<select className={inputStyles}\r\n            onChange={props.changed} \r\n            {...props.elementConfig}\r\n            value={props.value}>\r\n            {props.elementConfig.options.map(option => (\r\n                <option key={option.value}\r\n                value={option.value}>\r\n                {option.displayValue}\r\n                </option>\r\n            ))} \r\n            </select>); \r\n            break; \r\n        default:\r\n            inputElement = <input className={inputStyles} \r\n            onChange={props.changed}\r\n            {...props.elementConfig}\r\n            value={props.value}/>;\r\n    }   \r\n\r\n\r\n    return (\r\n\r\n        <div className='Input'>\r\n            <label className='Label'>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport './Checkout.css';\r\nimport axios from '../../axios-products';\r\nimport Spinner from \"../../Components/UI/Spinner/Spinner\";\r\nimport Input from '../../Components/UI/Input/Input';\r\nimport Button from '../../Components/UI/Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport * as checkoutListActions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n    state= {\r\n        Order: null,\r\n        CustomerData:{\r\n            name: {\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType:'select',\r\n                elementConfig: {\r\n                    options: [\r\n                    {value: 'fastest', displayValue: 'Delivery - Fastest'},\r\n                    {value: 'cheapest', displayValue: 'Delivery - Cheapest'},\r\n                ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        loading: false,\r\n        error: false,\r\n        checkoutPrice: null,\r\n        formIsValid: false\r\n    }\r\n\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState ({loading: true});\r\n        const customerData = {};\r\n        let userToken = this.props.token;\r\n        for (let formElementIdentifier in this.state.CustomerData) {\r\n            customerData[formElementIdentifier] = this.state.CustomerData[formElementIdentifier]\r\n        }\r\n        let OrderDate = new Date().toLocaleString();\r\n        const order = {\r\n            OrderDetails: this.props.Cart,\r\n            CustomerData:  customerData,\r\n            OrderDate:  OrderDate ,\r\n            Price: this.props.fullPrice,\r\n            userId: this.props.userId\r\n        } \r\n    axios.post ('/orders.json?auth=' + userToken, order)\r\n        .then ( response => {\r\n            this.setState({loading: false});\r\n            this.props.cartDeleteHandler();\r\n            this.props.onUpdateCart();\r\n            //to do - render success component\r\n        })\r\n        .then ( () => this.props.history.replace('/'))\r\n        .catch (error => {\r\n            this.setState({loading: false});\r\n        });  \r\n    }\r\n\r\n    componentDidMount (props) {\r\n        if(!this.props.token) {\r\n            this.props.history.replace('/');\r\n        }\r\n        this.props.onInitCheckout();        \r\n        console.log(this.props.Cart)\r\n        console.log(this.state.Order)\r\n    } \r\n    \r\n    fullPriceCheckout = () => {\r\n    let allCartPrices = Object.values(this.props.Cart);\r\n    let fullPrice= 0;\r\n    for (let i = 0; i < allCartPrices.length; i++) {\r\n        fullPrice += allCartPrices[i].price;\r\n    }\r\n    this.setState({checkoutPrice: fullPrice});\r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    // User input will update state and present input to form\r\n    inputChangeHandler= (event, inputIdentifier) => {\r\n        const updatedCustomerData = {\r\n            ...this.state.CustomerData\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedCustomerData[inputIdentifier]\r\n        }; \r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched= true;\r\n        updatedCustomerData[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true; \r\n        for ( let inputIdentifier in updatedCustomerData) {\r\n            formIsValid = updatedCustomerData[inputIdentifier].valid && formIsValid\r\n        }\r\n        this.setState({CustomerData: updatedCustomerData, formIsValid:formIsValid})\r\n    }\r\n\r\n        // redirect to /Cart if user want to edit cart  // \r\n    handleCartEdit = () => {\r\n        this.props.history.replace('/Cart');\r\n    }\r\n\r\n    render ()  {\r\n        let orderPrice = this.props.fullPrice;\r\n        let form = null;\r\n        let formElementArray = [];\r\n        let  printCheckoutProducts = null;\r\n        for (let key in this.state.CustomerData){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.CustomerData[key]\r\n            });\r\n        }\r\n        if(this.props.loading) {\r\n            return <Spinner/> \r\n        }\r\n        else if(this.props.fullPrice && this.props.Cart) {\r\n            orderPrice = <h4>{this.props.fullPrice} $</h4>\r\n            form = (\r\n                <form onSubmit={this.orderHandler}>\r\n                    <h3>Contact Data</h3>\r\n                    {formElementArray.map(formElement => (\r\n                        <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        changed={(event) => this.inputChangeHandler(event, formElement.id)}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        />\r\n                    ))}\r\n                    <Button disabled={!this.state.formIsValid}>ORDER</Button>\r\n                </form>\r\n            )\r\n\r\n            printCheckoutProducts = (Object.entries(this.props.Cart).map((product) => {\r\n                return (\r\n                <div className='ProductInCheckout' key={product[0]}> \r\n                <div className='CheckoutProductInfo' ><img className='CheckoutProductImage' src={product[1].image} alt='nike shoes'></img></div>\r\n                    <div className='ProductWrapper'>\r\n                        <div className='CheckoutProductInfo'><p>{product[1].brand}</p><p>{product[1].model}</p><p>{product[1].size}</p></div>\r\n                        <div className='CheckoutProductInfo'><p>{product[1].price}$</p> </div>\r\n                    </div>\r\n                </div>                 \r\n                );\r\n            }));\r\n\r\n        }\r\n        return (\r\n            <div className='Checkoutwrapper'>\r\n                <h1>Checkout</h1>\r\n                    <hr></hr>\r\n                <div className='CheckoutTemplate'>\r\n                    <div className ='CheckoutForm'>\r\n                        {form}\r\n                    </div>\r\n                    <div className='CheckoutSummary'>\r\n                        <h3>Order Summary</h3>\r\n                        <hr></hr>\r\n                        <div className='OrderFullPrice'>\r\n                        <h4>Order Price: </h4>{orderPrice}\r\n                        </div>\r\n                        <p>Product list</p>\r\n                        { printCheckoutProducts}\r\n                        <div className='editCartBtn'><Button btnType='editCartBtn' clicked={this.handleCartEdit}>Edit</Button></div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Cart: state.cart.cart,\r\n        loading: state.cart.loading,\r\n        fullPrice: state.cart.fullCartPrice,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitCheckout: () => dispatch(checkoutListActions.fetchLocalStoreCart()),\r\n        cartDeleteHandler: () => dispatch(checkoutListActions.clearLocalStore()),\r\n        onUpdateCart: () => dispatch(checkoutListActions.fetchLocalStoreCart()),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Checkout);","export const clearLocalStore = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('addToCart');\r\n    }\r\n}","import React from 'react';\r\nimport  './ProductMadeOf.modules.css';\r\n\r\n\r\nconst ProductMadeOf = (props) => {\r\n\r\n    return (\r\n        <div className={props.class} >\r\n            <span>upper: <div className=\"ShoeAvailableSize\" >{props.upper}</div></span>\r\n            <span>lining:<div className=\"ShoeAvailableSize\" >{props.lining}</div> </span>\r\n            <span>outerSole:<div className=\"ShoeAvailableSize\" >{props.outerSole}</div> </span>\r\n        </div>\r\n    \r\n    );\r\n    \r\n}\r\n\r\nexport default ProductMadeOf;\r\n\r\n","import React from 'react';\r\nimport  './Product.css';\r\nimport ProductMadeOf from './ProductMadeOf/ProductMadeOf';\r\n\r\n\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n    // Show available shoes sizes \r\n    const productSize = Object.entries(props.size)\r\n    .map((sizKey, index) => {\r\n        if(sizKey[1] !== 0) {\r\n            return (<div className=\"ShoeAvailableSize\" key={index}>{sizKey[0]}</div>);\r\n        }else {\r\n            return null;\r\n    }})\r\n    \r\n\r\n    \r\n    return (\r\n    <div className='ProductCard' key={props.id} onClick={props.clicked}>\r\n        <div className='ImagePlaceholder'><h3 className='PriceTag'>{props.price} $</h3><img className='ProductImage' src={props.image} alt={props.model + ' image'}></img></div>\r\n            <span><h2>{props.brand}</h2></span> <span></span>\r\n            <h3>{props.model}</h3>\r\n        <div>\r\n            {productSize}\r\n        </div>\r\n        <button className='btnShoeMadeOf'>Made off</button>\r\n        <ProductMadeOf\r\n            class={props.class}\r\n            upper={props.madeOf.upper}\r\n            lining={props.madeOf.lining}\r\n            outerSole={props.madeOf.outerSole}\r\n        />\r\n    </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Product;\r\n\r\n","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n   <div className='Backdrop' onClick={props.clicked}></div>\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport './Modal.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n    render () {\r\n        let modalClass = 'Modal ';\r\n        if (this.props.className) {\r\n            modalClass += this.props.className;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Backdrop  clicked={this.props.modalClosed} />\r\n                <div className={modalClass}>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Modal; ","import React, { Component } from 'react';\r\nimport  './FullProductInfo.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Button from '../UI/Button/Button';\r\nimport Modal from '../UI/Modal/Modal';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport productAddedImg from '../../assets/images/done.png';\r\nimport warningImg from '../../assets/images/warning.png';\r\nimport ProductMadeOf from '../Product/ProductMadeOf/ProductMadeOf';\r\n\r\nclass FullProductInfo extends Component {\r\n\r\n    state= {\r\n        quantity: null,\r\n        id: null,\r\n        size: null, \r\n        price: null,\r\n        image: null,\r\n        addedToCart: false,\r\n        sizeNotSelected: false,\r\n        continueToCart: false,\r\n        madeOfClicked: false\r\n    }\r\n\r\n\r\n    addToCartHandler = (selectedShoeId, selectedShoePrice, selectedShoeImg) => {\r\n        let newState = { ...this.state};\r\n        if (this.state.size) {\r\n            newState.quantity = 1; \r\n            newState.id = selectedShoeId;\r\n            newState.price = selectedShoePrice;\r\n            newState.image = selectedShoeImg;\r\n            this.setState({quantity: newState.quantity, id: newState.id, price: newState.price, addedToCart: true, image: newState.image}, () => {\r\n                const cartProduct = {\r\n                    id: this.state.id, \r\n                    size: this.state.size,\r\n                    quantity: this.state.quantity,\r\n                    price: this.state.price,\r\n                    image: this.state.image,\r\n                    brand: this.props.brand,\r\n                    model: this.props.model,\r\n                    type: this.props.type,\r\n                    madeOf: this.props.madeOf\r\n                }\r\n                this.props.onAddToCart(cartProduct);\r\n                this.setState({continueToCart: true})\r\n            });\r\n        } else {\r\n            this.setState({sizeNotSelected: true})\r\n        }\r\n    }\r\n\r\n    alertHandler = () => {\r\n        this.setState({sizeNotSelected: false});\r\n    }\r\n\r\n    selectSizeHandler = (sizKey) => {\r\n        this.setState({size: sizKey[0]});\r\n    }\r\n\r\n    continueHandler = (event) => {\r\n        this.props.history.push('/');\r\n        this.setState({continueToCart: false});\r\n    }\r\n\r\n    goToCartHandler = () => {\r\n        this.props.history.push('/Cart');\r\n        this.setState({continueToCart: false});\r\n    }\r\n    \r\n    showMadeOf = () => {\r\n        this.setState((prevState) => {\r\n            return {madeOfClicked: !prevState.madeOfClicked} \r\n        })\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    render () {\r\n        let alertSizeSelect = null;\r\n        let askIfContinue = null;\r\n\r\n        if (this.state.sizeNotSelected) {\r\n            alertSizeSelect = (\r\n            <Modal className={'sizeAlert'} modalClosed={this.alertHandler}>\r\n            <img className='productAddedImg' src={warningImg} alt='Product added to cart'/>\r\n            <div className='alertStyle'> <p>Please Select your size!</p></div>\r\n            </Modal>\r\n            ); \r\n        }\r\n\r\n        if(this.state.continueToCart) {\r\n            askIfContinue = (\r\n                <Modal className={'continueAlert'}>\r\n                    <h4>Product was added to Cart</h4>\r\n                    <img className='productAddedImg' src={productAddedImg} alt='Product added to cart'/>\r\n                    <Button clicked={this.continueHandler}>Continue Shopping</Button>\r\n                    <Button clicked={this.goToCartHandler}>Go to Cart</Button>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n        const productSize = Object.entries(this.props.size)\r\n        .map((sizKey, i) => {\r\n            if(sizKey[1] === 0) {\r\n            return (<button className=\"ShoeNotAvailableSize\" disabled key={i} >{sizKey[0]}</button>);\r\n            }else {\r\n             let checkIfClicked = this.state.size === sizKey[0]? 'ShoeAvailableSizeBtnActive': 'ShoeAvailableSizeBtn' //  Dynamically change Css class if button clicked\r\n            return (<button className={checkIfClicked} onClick={() => {this.selectSizeHandler(sizKey)}} key={i} >{sizKey[0]}</button>);\r\n        }}) \r\n\r\n        let selectedShoeId = this.props.id;\r\n        let selectedShoePrice = this.props.price;\r\n        let selectedShoeImg = this.props.image;\r\n        let addToCartBtn = (\r\n            <Button  clicked={() => this.addToCartHandler(selectedShoeId, selectedShoePrice, selectedShoeImg)}>Add to Cart</Button>\r\n        )\r\n    return (\r\n        <React.Fragment> \r\n        <div  className='close' onClick={this.props.exit}/>\r\n        <div className='FullProductCard' >\r\n            <div className='FullProductLeft'>\r\n                <h3 className='FullPriceTag'>{this.props.price} $</h3>\r\n                <img className='FullProductImage' src={this.props.image} alt={this.props.model + ' shoe image'}></img>\r\n                {this.state.madeOfClicked?\r\n                        <ProductMadeOf\r\n                        class={'ShoeMaterials'}\r\n                        upper={this.props.madeOf.upper}\r\n                        lining={this.props.madeOf.lining}\r\n                        outerSole={this.props.madeOf.outerSole}\r\n                        />  : null}\r\n            </div>\r\n            <div className=\"FullProductRigth\">\r\n            {alertSizeSelect}\r\n                <h1>{this.props.brand}</h1>\r\n                <span><h2>{this.props.model}</h2></span>   \r\n                <h4>Product id: {this.props.id} </h4>\r\n                <p>{this.props.description}</p>\r\n                <Button btnType='madeOf' clicked={this.showMadeOf}>Made off:</Button>\r\n                <h3>Chose your size</h3>\r\n                <div className='ProductSize'>{productSize }</div>\r\n                {addToCartBtn}\r\n                {askIfContinue}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n    );\r\n    }   \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddToCart: (cartProduct) => dispatch(actions.addToCartLocalStorage(cartProduct))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps) (FullProductInfo));\r\n\r\n","import React, { Component } from 'react';\r\nimport Product from '../Product/Product';\r\nimport'./ProductList.css';\r\nimport Modal from '../UI/Modal/Modal';\r\nimport FullProductInfo from '../FullProductInfo/FullProductInfo';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport Button from '../UI/Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport * as productListActions from '../../store/actions/index';\r\n\r\n\r\nclass ProductList extends Component {\r\n\r\n    state = {\r\n    selectedProductId: null,\r\n    selectedProductData: null,\r\n    visible: 8,\r\n    }\r\n    \r\n    productSelectedHandler = (id, shoes) => { \r\n        this.setState({selectedProductId: id});\r\n        this.setState({selectedProductData: shoes});\r\n    }\r\n\r\n    productSelectCancelHandler = () => {\r\n        this.setState({selectedProductId: null});\r\n    }\r\n    \r\n    loadMore = () => {\r\n        this.setState((prev) => {\r\n            return {visible: prev.visible + 12};\r\n        });\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.onInitProducts();\r\n    }\r\n\r\n\r\n    render () {\r\n        let loadMoreBtn = null;\r\n        let fullProductInf = null;\r\n        let productList = null;\r\n        let loadingSpinner = this.props.loading? <Spinner/> : null ; \r\n\r\n        productList = this.props.error && this.props.prod? <p>Unfortunately, we can't load shoes from the database!</p> : null;\r\n        if (this.props.prod) {\r\n            productList = (this.props.prod.slice(0, this.state.visible).map((shoes, index) => {\r\n                return  (\r\n                        <Product \r\n                        key={shoes.id}\r\n                        brand={shoes.brand}\r\n                        model={shoes.model} \r\n                        price={shoes.price}\r\n                        image={shoes.image}\r\n                        size={shoes.size}\r\n                        type={shoes.type}\r\n                        madeOf={shoes.madeOf}\r\n                        class={'HideMaterials'}\r\n                        clicked={() => this.productSelectedHandler(shoes.id, shoes)}\r\n                        />\r\n                    );\r\n            })); \r\n            loadMoreBtn = <Button clicked={this.loadMore} >Load more</Button>\r\n        } \r\n        \r\n        if (this.state.selectedProductId != null) {\r\n            fullProductInf = (\r\n                <Modal modalClosed={this.productSelectCancelHandler}>\r\n                <FullProductInfo \r\n                id={this.state.selectedProductId}\r\n                brand={this.state.selectedProductData.brand}\r\n                model={this.state.selectedProductData.model} \r\n                price={this.state.selectedProductData.price}\r\n                description={this.state.selectedProductData.description}\r\n                image={this.state.selectedProductData.image}\r\n                size={this.state.selectedProductData.size}\r\n                type={this.state.selectedProductData.type}\r\n                madeOf={this.state.selectedProductData.madeOf}\r\n                exit={this.productSelectCancelHandler}\r\n                />\r\n                </Modal>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                {loadingSpinner}\r\n                {fullProductInf} \r\n                    <div className='ShoeDisplayer'>\r\n                    {productList}\r\n                    </div>   \r\n                {loadMoreBtn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        prod: state.productList.Products,\r\n        error: state.productList.error,\r\n        loading: state.productList.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitProducts: () => dispatch(productListActions.initProducts())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ProductList);","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-products';\r\n\r\n\r\nexport const fetchProductsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_START\r\n    };\r\n};\r\n\r\nexport const setProducts = (products) => {\r\n    return {\r\n        type: actionTypes.FETCH_PRODUCTS,\r\n        products: products\r\n    };\r\n};\r\n\r\nexport const fetchProductsFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PRODUCTS_FAIL,\r\n    };\r\n};\r\n\r\n\r\nexport const initProducts = () => {\r\n    return dispatch => {\r\n        dispatch(fetchProductsStart());\r\n        axios.get( '/Products.json' )\r\n        .then( response => {\r\n            dispatch( setProducts (response.data));\r\n        } )\r\n        .catch( error => {\r\n            dispatch( fetchProductsFail() );\r\n        } );\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Input from '../../Components/UI/Input/Input';\r\nimport Button from '../../Components/UI/Button/Button';\r\nimport './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n                email: {\r\n                    elementType:'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'Mail Address'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        isEmail: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                password: {\r\n                    elementType:'input',\r\n                    elementConfig: {\r\n                        type: 'password',\r\n                        placeholder: 'Password'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        minLength: 6\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangeHandler = ( event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls, \r\n                [controlName]: {\r\n                    ...this.state.controls[controlName],\r\n                    value: event.target.value,\r\n                    valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                    touched: true\r\n                }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup )\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup};\r\n        });\r\n    }\r\n\r\n    render () {\r\n        let formElementArray = [];\r\n        for (let key in this.state.controls){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n\r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                changed={(event) => this.inputChangeHandler(event, formElement.id)}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n            />\r\n        ));\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p className='error'>Unfortunately! {this.props.error.message.replace(/_/g, ' ')}</p>\r\n            );\r\n        };\r\n\r\n        let authRedirect = null;\r\n        if ( this.props.isAuthenticated && this.props.onRedirectBackToCart) {\r\n            authRedirect = <Redirect to=\"/Cart\"/>\r\n        }\r\n        else if (this.props.isAuthenticated && this.props.onRedirectBackToCart == null ) {\r\n            authRedirect = <Redirect to=\"/\"/>\r\n        }\r\n        return (\r\n            <div className='Auth'>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <h3 className='AuthHeader'>{this.state.isSignup? 'Sign-up' : 'Login'}</h3>\r\n                <form onSubmit={this.submitHandler}>\r\n                {form}\r\n                <Button btnType='Success'>Submit </Button>\r\n                </form>\r\n                <Button \r\n                    clicked= {this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">Switch to {this.state.isSignup? 'Login' : 'Signup'} &#9745;</Button>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        onRedirectBackToCart: state.cart.cart,\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !==null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Auth);","import React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentWillUnmount () {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return  (<Redirect to='/' />);\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch (actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect (null, mapDispatchToProps) (Logout);\r\n","import React, { Component } from 'react';\r\nimport './Account.modules.css';\r\nimport Spinner from \"../../Components/UI/Spinner/Spinner\";\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-products';\r\nimport CartProductList from '../../Components/Cart/CartProductList/CartProductList';\r\nimport Button from '../../Components/UI/Button/Button';\r\n\r\nclass Account extends Component {\r\n\r\n    state = {\r\n        accountData:null,\r\n        loading: false,\r\n        error: null,\r\n        showProducts: false,\r\n        ProductId: null\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.setState({loading: true});  \r\n\r\n        let queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userId + '\"';\r\n        axios.get( '/orders.json' + queryParams )\r\n        .then( response => {\r\n            this.setState( { accountData: response.data, loading: false });\r\n        })\r\n        .catch( error => {\r\n            this.setState({ error: error, loading: false } );\r\n        })\r\n    } \r\n\r\n    openProductList = (id) => {\r\n        this.setState((prevState) => { \r\n            return (\r\n                {showProducts: !prevState.showProducts}\r\n            )\r\n        });\r\n        if (id!== this.state.ProductId) {\r\n            this.setState({showProducts: true, ProductId: id })\r\n        } else {\r\n            this.setState({ProductId: id}) \r\n        }\r\n    }\r\n\r\nrender () {\r\n    let spinner = null;\r\n    let showOrders = null;\r\n    if (this.state.loading) {\r\n        spinner = (<Spinner/>);\r\n    }\r\n\r\n    if (this.state.accountData) {\r\n        showOrders = (Object.entries(this.state.accountData).map((order) => {\r\n            return (\r\n            <div className='Account' key={order[0]}>\r\n                    <div className='OrderWrapper'  > \r\n                    <div className='OrderProductInfo'><h4>Date</h4> <p>{order[1].OrderDate}</p></div> \r\n                    <div className='OrderProductInfo'><h4>Email</h4> <p>{order[1].CustomerData.email.value}</p> </div>\r\n                    <div className='OrderProductInfo'><h4>Name</h4> <p>{order[1].CustomerData.name.value}</p></div>\r\n                    <div className='OrderProductInfo'><h4>Street</h4> <p>{order[1].CustomerData.street.value}</p></div>\r\n                    <div className='OrderProductInfo'><h4>Total </h4><p>{order[1].Price} $</p></div>\r\n                    <div className='OrderProductBtn'><Button clicked={() => {this.openProductList(order[0])}}>Details</Button></div>\r\n                </div>\r\n                {(this.state.showProducts && order[0] === this.state.ProductId? ( Object.entries(order[1].OrderDetails).map((prod) => {\r\n                        return (\r\n                            <CartProductList\r\n                                key={prod[0]}\r\n                                id={prod[0]}\r\n                                image={prod[1].image}\r\n                                alt={prod[1].brand + ' ' + prod[1].model}\r\n                                brand={prod[1].brand}\r\n                                model={prod[1].model}\r\n                                quantity={prod[1].quantity}\r\n                                size={prod[1].size}\r\n                                price={prod[1].price}\r\n                                noBtn='noBtn'\r\n                            />\r\n                            );   \r\n                    }) \r\n                ): null)\r\n                }     \r\n            </div>    \r\n            );\r\n            }));\r\n    }\r\n\r\n    return (\r\n        <div className='OrdersLayout'>\r\n            {spinner}\r\n            <h1>Your Orders</h1>\r\n            {showOrders}\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        token: state.auth.token\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps) (Account);","import React, { Component } from 'react';\r\nimport './App.modules.css';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport {Route, Switch, withRouter, Redirect } from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport Cart from './Components/Cart/Cart';\r\nimport Checkout from './Containers/Checkout/Checkout';\r\nimport ProductList from './Components/ProductList/ProductList';\r\nimport Auth from './Containers/Auth/Auth';\r\nimport Logout from './Containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions/index';\r\nimport Account from './Containers/Account/Account';\r\n\r\n\r\nclass App extends Component {\r\ncomponentDidMount () {\r\n  this.props.onTryAutoSignup();\r\n}\r\n\r\n  render() {\r\n\r\n    let routes = (\r\n      <Switch>\r\n      <Route path=\"/Cart\" component={Cart}/>\r\n      <Route path=\"/Login\" component={Auth}/>\r\n      <Route path=\"/\" exact component={ProductList}/>\r\n      <Redirect to=\"/\"/>\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/Cart\" component={Cart}/>\r\n          <Route path=\"/Logout\" component={Logout}/>\r\n          <Route path=\"/Login\" component={Auth}/>\r\n          <Route path=\"/Account\" component={Account}/>\r\n          <Route path=\"/Checkout\" component={Checkout}/>\r\n          <Route path=\"/\" exact component={ProductList}/>\r\n          <Redirect to=\"/\"/>\r\n        </Switch>\r\n\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  };\r\n};\r\n\r\nexport default withRouter (connect(mapStateProps, mapDispatchToProps) (App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    Products: null,\r\n    error: false,\r\n    loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_START: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case actionTypes.FETCH_PRODUCTS: \r\n            return {\r\n                ...state,\r\n                Products: action.products,\r\n                error: false,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            };         \r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cart: null,\r\n    loading: true,\r\n    fullCartPrice: null,\r\n    cartItemsCounter: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_CART_FROM_LOCAL_STORE:\r\n            return {\r\n                ...state,\r\n                cart: action.localCart,\r\n                fullCartPrice: action.fullCartPrice,\r\n                cartItemsCounter: action.cartItemsCounter,\r\n                loading: false,\r\n            };\r\n        case actionTypes.FETCH_CART_FROM_LOCAL_FAIL:    \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                cart: action.cart,\r\n                cartItemsCounter: null\r\n            };\r\n        case actionTypes.DELETE_FROM_CART:    \r\n            return {\r\n                ...state,\r\n                cartItemsCounter: action.cartDecreaseCounter,\r\n                loading: false,\r\n            };    \r\n        case actionTypes.CART_COUNTER:    \r\n            return {\r\n                ...state,\r\n                cartItemsCounter: action.cartItemsCounter,\r\n                loading: false,\r\n            };       \r\n        default:    \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return {\r\n        ...state,\r\n            error: null,\r\n            loading: true\r\n    };\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n            token: action.idToken,\r\n            userId: action.userId,\r\n            error: null,\r\n            loading: false\r\n    };\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n    };\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return {\r\n        ...state,\r\n        token: null,\r\n        userId: null\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart (state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess (state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail (state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout (state, action);\r\n        default:\r\n            return state;\r\n            \r\n    };\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport productListReducer from './store/reducers/productList';\r\nimport cartReducer from './store/reducers/cart';\r\nimport authReducer from './store/reducers/auth';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    cart: cartReducer,\r\n    productList: productListReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore( rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render( app, document.getElementById('root'));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}